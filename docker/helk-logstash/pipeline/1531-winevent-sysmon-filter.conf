# HELK sysmon filter conf file
# HELK build Stage: Alpha
# Author: Roberto Rodriguez (@Cyb3rWard0g), stavhaygn
# License: GPL-3.0

filter {
  if [log_name] =~ /^[mM]icrosoft\-[wW]indows\-[sS]ysmon\/[oO]perational$/ {
    mutate {
      add_field => {
        "event_timezone" => "UTC"
        "etl_pipeline" => "winevent-sysmon-all-1531"
        "[@metadata][index_name]" => "sysmon"
      }
      # Sysmon uses its own timestamp using the field `UtcTime`
      rename => { "event_original_time" => "event_recorded_time" }
    }
    date {
      timezone => "UTC"
      match => [ "UtcTime", "YYYY-MM-dd HH:mm:ss.SSS" ]
      target=> "@timestamp"
      tag_on_failure => [ "_parsefailure", "parsefailure-critical", "parsefailure-date-@timestamp", "parsefailure-date-sysmon-UtcTime" ]
      add_field => { 
        "event_original_time" => "%{@timestamp}"
        "event_creation_time" => "%{@timestamp}"
      }
    }
    mutate {
      rename => {
        "[user][domain]" => "user_reporter_domain"
        "[user][identifier]" => "user_reporter_sid"
        "[user][name]" => "user_reporter_name"
        "[user][type]" => "user_reporter_type"
      }
    }
    if [RuleName] {
      kv {
        source => "RuleName"
        field_split => ","
        value_split => "="
        prefix => "rule_"
        transform_key => "lowercase"
      }
      mutate {
        add_field => {
          "tag" => "%{RuleName}"
        }
      }
    }
    if [Hashes] {
      kv {
        source => "Hashes"
        field_split => ","
        value_split => "="
        prefix => "hash_"
        transform_key => "lowercase"
      }
    }
    if [event_id] == "1" {
      mutate {
        add_field => { "action" => "processcreate" }
        rename => {
          "ProcessGuid" => "process_guid"
          "ProcessId" => "process_id"
          "Image" => "process_file_path"
          "FileVersion" => "file_version"
          "Description" => "file_description"
          "Product" => "file_product"
          "Company" => "file_company"
          "OriginalFileName" => "file_name_original"
          "CommandLine" => "process_command_line"
          "CurrentDirectory" => "process_file_directory"
          "User" => "user_name"
          "LogonGuid" => "user_logon_guid"
          "LogonId" => "user_logon_id"
          "TerminalSessionId" => "user_session_id"
          "IntegrityLevel" => "process_integrity_level"
          "ParentProcessGuid" => "process_parent_guid"
          "ParentProcessId" => "process_parent_id"
          "ParentImage" => "process_parent_file_path"
          "ParentCommandLine" => "process_parent_command_line"
        }
      }
    }
    if [event_id] == "2" {
      mutate {
        add_field => { "action" => "filecreatetime" }
        rename => {
          "ProcessGuid" => "process_guid"
          "ProcessId" => "process_id"
          "Image" => "process_file_path"
          "TargetFilename" => "file_name"
        }
      }
    }
    if [event_id] == "3" {
      mutate {
        add_field => { "action" => "networkconnect" }
        # IPv6 vs IPv4 checking is done elsewhere, therefore 'DestinationIsIpv6' and 'SourceIsIpv6' are kept as is.
        rename => {
          "ProcessGuid" => "process_guid"
          "ProcessId" => "process_id"
          "Image" => "process_file_path"
          "User" => "user_name"
          "Protocol" => "network_protocol"
          "Initiated" => "network_initiated"
          "SourceIsIpv6" => "src_ip_is_ipv6"
          "SourceIp" => "src_ip_addr"
          "SourceHostname" => "src_dvc_hostname"
          "SourcePort" => "src_port_number"
          "SourcePortName" => "src_port_name"
          "DestinationIsIpv6" => "dst_ip_is_ipv6"
          "DestinationIp" => "dst_ip_addr"
          "DestinationHostname" => "dst_dvc_hostname"
          "DestinationPort" => "dst_port_number"
          "DestinationPortName" => "dst_port_name"
        }
      }
    }
    if [event_id] == "4" {
      mutate {
        add_field => { "action" => "sysmonservicestatechanged" }
        rename => {
          "State" => "service_state"
          "Version" => "file_version"
          "SchemaVersion" => "sysmon_schema_version"
        }
      }
    }
    if [event_id] == "5" {
      mutate {
        add_field => { "action" => "processterminated" }
        rename => {
          "ProcessGuid" => "process_guid"
          "ProcessId" => "process_id"
          "Image" => "process_path"
          "User" => "user_name"
        }
      }
    }
    if [event_id] == "6" {
      mutate {
        add_field => { "action" => "driverload" }
        rename => {
          "ImageLoaded" => "driver_loaded"
          "Signed" => "driver_is_signed"
          "Signature" => "driver_signature"
          "SignatureStatus" => "driver_signature_status"
        }
      }
    }
    if [event_id] == "7" {
      mutate {
        add_field => { "action" => "moduleload" }
        rename => {
          "ProcessGuid" => "process_guid"
          "ProcessId" => "process_id"
          "Image" => "process_file_path"
          "ImageLoaded" => "module_path"
          "FileVersion" => "file_version"
          "Description" => "file_description"
          "Product" => "file_product"
          "Company" => "file_company"
          "OriginalFileName" => "file_name_original"
          "Signed" => "module_is_signed"
          "Signature" => "module_signature"
          "SignatureStatus" => "module_signature_status"
          "User" => "user_name"
        }
      }
    }
    if [event_id] == "8" {
      mutate {
        add_field => { "action" => "createremotethread" }
        rename => {
          "SourceProcessGuid" => "process_guid"
          "SourceProcessId" => "process_id"
          "SourceImage" => "process_file_path"
          "TargetProcessGuid" => "target_process_guid"
          "TargetProcessId" => "target_process_id"
          "TargetImage" => "target_process_file_path"
          "NewThreadId" => "thread_new_id"
          "StartAddress" => "thread_start_address"
          "StartModule" => "thread_start_module"
          "StartFunction" => "thread_start_function"
        }
      }
    }
    if [event_id] == "9" {
      mutate {
        add_field => { "action" => "rawaccessread" }
        rename => {
          "ProcessGuid" => "process_guid"
          "ProcessId" => "process_id"
          "Image" => "process_file_path"
          "Device" => "target_device"
        }
      }
    }
    if [event_id] == "10" {
      mutate {
        add_field => { "action" => "processaccess" }
        rename => {
          "SourceProcessGuid" => "process_guid"
          "SourceProcessId" => "process_id"
          "SourceThreadId" => "thread_id"
          "SourceImage" => "process_file_path"
          "TargetProcessGuid" => "target_process_guid"
          "TargetProcessId" => "target_process_id"
          "TargetImage" => "target_process_file_path"
          "GrantedAccess" => "process_granted_access"
          "CallTrace" => "process_call_trace"
        }
      }
    }
    if [event_id] == "11" {
      mutate {
        add_field => { "action" => "filecreate" }
        rename => {
          "ProcessGuid" => "process_guid"
          "ProcessId" => "process_id"
          "Image" => "process_file_path"
          "TargetFilename" => "file_name"
        }
      }
    }
    if [event_id] == "12" or [event_id] == "13" or [event_id] == "14" {
      mutate {
        add_field => { "action" => "registryevent" }
        rename => {
          "EventType" => "event_type"
          "ProcessGuid" => "process_guid"
          "ProcessId" => "process_id"
          "Image" => "process_file_path"
          "TargetObject" => "registry_path"
          "Details" => "registry_value"
          "NewName" => "registry_key_new_name"
        }
      }
    }
    if [event_id] == "15" {
      mutate {
        add_field => { "action" => "filecreatestreamhash" }
        rename => {
          "ProcessGuid" => "process_guid"
          "ProcessId" => "process_id"
          "Image" => "process_file_path"
          "TargetFilename" => "file_name"
        }
      }
    }
    if [event_id] == "16" {
      kv {
        source => "ConfigurationFileHash"
        value_split => "="
        prefix => "sysmon_config_hash_"
        transform_key => "lowercase"
      }
      mutate {
        add_field => { "action" => "sysmonconfigstatechanged" }
        rename => {
          "State" => "sysmon_configuration_state"
          "Configuration" => "sysmon_configuration"
        }
      }
    }
    if [event_id] == "17" or [event_id] == "18" {
      mutate {
        add_field => { "action" => "pipeevent" }
        rename => {
          "EventType" => "event_type"
          "ProcessGuid" => "process_guid"
          "ProcessId" => "process_id"
          "PipeName" => "pipe_name"
          "Image" => "process_file_path"
        }
      }
    }
    if [event_id] == "19" {
      mutate {
        add_field => { "action" => "wmievent" }
        rename => {
          "EventType" => "event_type"
          "Operation" => "wmi_operation"
          "EventNamespace" => "wmi_namespace"
          "Name" => "wmi_filter_name"
          "Query" => "wmi_query"
        }
      }
    }
    if [event_id] == "20" {
      mutate {
        add_field => { "action" => "wmievent" }
        rename => {
          "EventType" => "event_type"
          "Operation" => "wmi_operation"
          "Name" => "wmi_consumer_name"
          "Type" => "wmi_consumer_type"
          "Destination" => "wmi_consumer_destination"
        }
      }
    }
    if [event_id] == "21" {
      mutate {
        add_field => { "action" => "wmievent" }
        rename => {
          "EventType" => "event_type"
          "Operation" => "wmi_operation"
          "Consumer" => "wmi_consumer_path"
          "Filter" => "wmi_filter_path"
        }
      }
    }
    if [event_id] == "22" {
      mutate {
        add_field => { "action" => "dnsquery" }
        rename => {
          "ProcessGuid" => "process_guid"
          "ProcessId" => "process_id"
          "QueryName" => "dst_host_name"
          "QueryStatus" => "dns_response_code"
          "QueryResults" => "dns_response_name"
          "Image" => "process_file_path"
        }
        copy => { "dst_host_name" => "dns_query_name" }
        add_tag => [ "backwards_compatibility for winevent:Sysmon:22 field:dns_query_name" ]

      }
    }
    if [event_id] == "23" {
      mutate {
        add_field => { "action" => "filedelete" }
        rename => {
          "ProcessGuid" => "process_guid"
          "ProcessId" => "process_id"
          "Image" => "process_file_path"
          "User" => "user_name"
          "TargetFilename" => "file_name"
        }
      }
    }
    if [event_id] == "255" {
      mutate {
        add_field => { "action" => "error" }
      }
    }
    date {
      timezone => "UTC"
      match => [ "CreationUtcTime", "YYYY-MM-dd HH:mm:ss.SSS" ]
      target => "file_creation_time"
      tag_on_failure => [ "_parsefailure", "parsefailure-date-file_creation_time", "parsefailure-date-sysmon-CreationUtcTime" ]
    }
    date {
      timezone => "UTC"
      match => [ "PreviousCreationUtcTime", "YYYY-MM-dd HH:mm:ss.SSS" ]
      target => "file_previous_creation_time"
      tag_on_failure => [ "_parsefailure", "parsefailure-date-file_previous_creation_time", "parsefailure-date-sysmon-PreviousCreationUtcTime" ]
    }
    mutate {
      remove_field => [
        "Hashes",
        "ConfigurationFileHash",
        "UtcTime",
        "CreationUtcTime",
        "PreviousCreationUtcTime"
      ]
    }
  }
}
